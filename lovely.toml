[manifest]
version = "1.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
contents.hand =
        {n=G.UIT.R, config={align = "cm", id = 'hand_text_area', colour = darken(G.C.BLACK, 0.1), r = 0.1, emboss = 0.05, padding = 0.03}, nodes={
            {n=G.UIT.C, config={align = "cm"}, nodes={
              {n=G.UIT.R, config={align = "cm", minh = 1.1}, nodes={
                {n=G.UIT.O, config={id = 'hand_name', func = 'hand_text_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "handname_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.O, config={id = 'hand_chip_total', func = 'hand_chip_total_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_total_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.T, config={ref_table = G.GAME.current_round.current_hand, ref_value='hand_level', scale = scale, colour = G.C.UI.TEXT_LIGHT, id = 'hand_level', shadow = true}}
              }},
              {n=G.UIT.R, config={align = "cm", minh = 1, padding = 0.1}, nodes={
                {n=G.UIT.C, config={align = "cr", minw = 2, minh =1, r = 0.1,colour = G.C.UI_CHIPS, id = 'hand_chip_area', emboss = 0.05}, nodes={
                    {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_chips', object = Moveable(0,0,0,0), w = 0, h = 0}},
                    {n=G.UIT.O, config={id = 'hand_chips', func = 'hand_chip_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*2.3})}},
                    {n=G.UIT.B, config={w=0.1,h=0.1}},
                }},
                {n=G.UIT.C, config={align = "cm"}, nodes={
                  {n=G.UIT.T, config={text = "X", lang = G.LANGUAGES['en-us'], scale = scale*2, colour = G.C.UI_MULT, shadow = true}},
                }},
                {n=G.UIT.C, config={align = "cl", minw = 2, minh=1, r = 0.1,colour = G.C.UI_MULT, id = 'hand_mult_area', emboss = 0.05}, nodes={
                  {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_mult', object = Moveable(0,0,0,0), w = 0, h = 0}},
                  {n=G.UIT.B, config={w=0.1,h=0.1}},
                  {n=G.UIT.O, config={id = 'hand_mult', func = 'hand_mult_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "mult_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*2.3})}},
                }}
              }}
            }}
          }}'''
position = "at"
match_indent = true
overwrite = true
payload = """
contents.hand =
        {n=G.UIT.R, config={align = "cm", id = 'hand_text_area', colour = darken(G.C.BLACK, 0.1), r = 0.1, emboss = 0.05, padding = 0.03}, nodes={
            {n=G.UIT.C, config={align = "cm"}, nodes={
              {n=G.UIT.R, config={align = "cm", minh = 1.1}, nodes={
                {n=G.UIT.O, config={id = 'hand_name', func = 'hand_text_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "handname_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.O, config={id = 'hand_chip_total', func = 'hand_chip_total_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_total_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.T, config={ref_table = G.GAME.current_round.current_hand, ref_value='hand_level', scale = scale, colour = G.C.UI.TEXT_LIGHT, id = 'hand_level', shadow = true}}
              }},
              {n=G.UIT.R, config={align = "cm", minh = 0.5}, nodes={
                {n=G.UIT.C, config={align = "cr", minw = 1.5, minh = 0.5, r = 0.1, colour = G.C.GREEN, id = 'hand_pow_area', emboss = 0.05}, nodes={
                    {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_pow', object = Moveable(0,0,0,0), w = 0, h = 0}},
                    {n=G.UIT.O, config={id = 'hand_pow', func = 'hand_pow_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "pow_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*1.5})}},
                    {n=G.UIT.B, config={w=0.1,h=0.1}},
                }},
                {n=G.UIT.C, config={align = "cm", minw = 1.5, minh = 0.5, r = 0.1, colour = G.C.CLEAR, id = 'hand_pow_empty', emboss = 0.05}},
              }},
              {n=G.UIT.R, config={align = "cm", minh = 1, padding = 0.1}, nodes={
                {n=G.UIT.C, config={align = "cr", minw = 2, minh =1, r = 0.1,colour = G.C.UI_CHIPS, id = 'hand_chip_area', emboss = 0.05}, nodes={
                    {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_chips', object = Moveable(0,0,0,0), w = 0, h = 0}},
                    {n=G.UIT.O, config={id = 'hand_chips', func = 'hand_chip_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*2.3})}},
                    {n=G.UIT.B, config={w=0.1,h=0.1}},
                }},
                {n=G.UIT.C, config={align = "cm"}, nodes={
                  {n=G.UIT.T, config={text = "X", lang = G.LANGUAGES['en-us'], scale = scale*2, colour = G.C.UI_MULT, shadow = true}},
                }},
                {n=G.UIT.C, config={align = "cl", minw = 2, minh=1, r = 0.1,colour = G.C.UI_MULT, id = 'hand_mult_area', emboss = 0.05}, nodes={
                  {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_mult', object = Moveable(0,0,0,0), w = 0, h = 0}},
                  {n=G.UIT.B, config={w=0.1,h=0.1}},
                  {n=G.UIT.O, config={id = 'hand_mult', func = 'hand_mult_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "mult_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*2.3})}},
                }}
              }},
            }}
          }}
          """


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''chips = self.HUD:get_UIE_by_ID('hand_chips'),'''
position = "before"
match_indent = true
payload = """pow = self.HUD:get_UIE_by_ID('hand_pow'),"""


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''current_hand = {'''
position = "after"
match_indent = true
payload = """
    pow = 1,
    pow_text = '1',
"""


[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''
    if not G.TAROT_INTERRUPT then G.hand_text_area.mult:juice_up() end
end
'''
position = "after"
match_indent = true
payload = """
if vals.pow and G.GAME.current_round.current_hand.pow ~= vals.pow then
    local delta = (type(vals.pow) == 'number' and type(G.GAME.current_round.current_hand.pow) == 'number') and (vals.pow - G.GAME.current_round.current_hand.pow) or 0
    if delta < 0 then delta = ''..delta; col = G.C.RED
    elseif delta > 0 then delta = '+'..delta
    else delta = ''..delta
    end
    if type(vals.pow) == 'string' then delta = vals.pow end
    G.GAME.current_round.current_hand.pow = vals.pow
    G.hand_text_area.pow:update(0)
    if vals.StatusText then 
        attention_text({
            text =delta,
            scale = 0.8, 
            hold = 1,
            cover = G.hand_text_area.pow.parent,
            cover_colour = mix_colours(G.C.GREEN, col, 0.1),
            emboss = 0.05,
            align = 'cm',
            cover_align = 'cr'
        })
    end
end
"""

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
G.E_MANAGER:add_event(Event({
    trigger = 'after',delay = 0.4,
    func = (function()  update_hand_text({delay = 0, immediate = true}, {mult = 0, chips = 0, chip_total = math.floor(hand_chips*mult), level = '', handname = ''});play_sound('button', 0.9, 0.6);return true end)
  }))'''
position = "before"
match_indent = true
payload = """
G.E_MANAGER:add_event(Event({
    trigger = 'after',delay = 0.4,
    func = (function()  update_hand_text({delay = 0, immediate = true}, {chips = hand_chips ^ pow, pow = 1, level = '', handname = ''});play_sound('button', 0.9, 0.6);return true end)
  }))"""

[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = 'hand_chips\*mult'
position = "at"
overwrite = true
match_indent = false
payload = "hand_chips^pow*mult"

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''G.ARGS.flame_handler = G.ARGS.flame_handler or {'''
position = "after"
match_indent = true
payload = """
  pow = {
    id = 'flame_pow',
    arg_tab = 'pow_flames',
    colour = G.C.GREEN,
    accent = G.C.UI_POWLICK,
    y = 0.25
  },"""


[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
e.config.object:set_alignment({
    major = e.parent,
    type = 'bmi',
    offset = {x=0,y=0},
    xy_bond = 'Weak'
})'''
position = "at"
match_indent = true
overwrite = true
payload = """
e.config.object:set_alignment({
    major = e.parent,
    type = 'bmi',
    offset = {x=0,y=v.y and v.y or 0},
    xy_bond = 'Weak'
})"""


# [[patches]]
# [patches.pattern]
# target = "functions/common_events.lua"
# pattern = '''
# local mult = card:get_chip_mult()
# if mult ~= 0 then
#     ret.playing_card.mult = mult
# end'''
# position = "after"
# match_indent = true
# payload = """

# local pow = card:get_chip_pow()
# if pow ~= 0 then
#     ret.playing_card.pow = pow
# end
# """

